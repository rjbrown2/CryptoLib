name: CryptoLib - KMC - Integration

on: 
  push:
    branches: [ test ]
  pull_request:

jobs:
  Redhat_Build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Determine Branch on Push
        run: echo "CURRENT_BRANCH=$(git branch --show-current)" >> $GITHUB_ENV
      - name: Use Branch
        run: echo ${{ env.CURRENT_BRANCH}}
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USER }}
          password: ${{ secrets.DOCKER_PASS }}
      - name: Build Compose Containers
        run: cd ./compose && docker-compose -f docker-compose-kmc-mdb up -d
        
      - name: Remove Build Directory Redhat
        run: docker exec compose_redhat_1 bash -c 'if test -d /itc/CryptoLib/build; then rm -rf /itc/CryptoLib/build; fi'
        
      - name: Build RedHat CryptoLib
        run: docker exec compose_redhat_1 bash -c 'cd /itc/CryptoLib/ && git checkout ${{ env.CURRENT_BRANCH }} && mkdir build && cd build && cmake -DDEBUG=1 -DMYSQL=1 -DLIBGCRYPT=1 -DKMCCRYPTO=1 -DENCTEST=1 -DKMC_MDB_RH=1 ../ && make'
      - name: Test RedHat CryptoLib 
        run: docker exec compose_redhat_1 bash -c 'cd /itc/CryptoLib/build/bin && ./ut_tc_kmc --filter=TC_APPLY_SECURITY.HAPPY_PATH_ENC_CBC_KMC'   
      - name: Test RedHat CryptoLib2 
        run: docker exec compose_redhat_1 bash -c 'cd /itc/CryptoLib/build/bin && ./ut_tc_kmc --filter=TC_APPLY_SECURITY.HAPPY_PATH_ENC_CBC_KMC'   
    
      #- name: Test KMC SA MGMT List 
      #  uses: nick-fields/retry@v2
      #  with:
      #    timeout_seconds: 15
      #    max_attempts: 3
      #    retry_on: error
      #    command: |
      #      docker exec compose_kmc_1 /ammos/kmc-crypto-client/bin/kmc-sa-mgmt list
      - name: Test KMC Curl 
        uses: nick-fields/retry@v2
        with:
          timeout_seconds: 15
          max_attempts: 3
          retry_on: error
          command: |
            docker exec compose_redhat_1 bash -c 'curl -X POST --cert /certs/redhat-cert.pem --key /certs/redhat-key.pem  --cacert /certs/ammos-ca-bundle.crt "https://itc-kmc.nasa.gov:8443/crypto-service/encrypt?keyRef=kmc/test/key130&transformation=AES/GCM/NoPadding&IV=AAAAAAAAAAAAAAAH"'
      - name: This might Break Stuff
        run: |
          docker exec -it compose_redhat_1 bash
          /ammos/kmc-crypto-client/bin/kmc-sa-mgmt list
      - name: KMC Integration - Debian
        run: | 
          echo "WIP: Code must be completed to add KMC, and MYSQL test cases"

      - name: Cleanup
        run: cd ./compose && docker-compose -f docker-compose-kmc-mdb down
